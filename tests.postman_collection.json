{
	"info": {
		"_postman_id": "55ab8e62-ffcb-402d-86d1-60d1499b8f31",
		"name": "redes lab 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33831581"
	},
	"item": [
		{
			"name": "todas las películas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains peliculas\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData).to.exist.and.to.be.an('array');",
							"    pm.expect(responseData[0]).to.be.an('object');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas"
					]
				}
			},
			"response": []
		},
		{
			"name": "película por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Película tiene el ID pedido\", function () {",
							"  const responseData = pm.response.json();",
							"  const id = pm.request.url.toString().split('/').at(-1);",
							"",
							"  pm.expect(responseData.id).to.be.a('number');",
							"  pm.expect(responseData.id).to.eql(parseInt(id));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "agregar película",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"La película devuelta tiene los campos correctos\", function () {",
							"    const responseData = pm.response.json();",
							"    const requestBody = JSON.parse(request.data);",
							"",
							"    pm.expect(responseData['genero']).to.exist.and.eql(requestBody['genero']);",
							"    pm.expect(responseData['titulo']).to.exist.and.eql(requestBody['titulo']);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"Lab 1: The Nightmare Returns\",\n    \"genero\": \"terror\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/peliculas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas"
					],
					"query": [
						{
							"key": "titulo",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "actualizar película",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Película tiene el ID pedido\", function () {",
							"  const responseData = pm.response.json();",
							"  const id = pm.request.url.toString().split('/').at(-1);",
							"",
							"  pm.expect(responseData.id).to.be.a('number');",
							"  pm.expect(responseData.id).to.eql(parseInt(id));",
							"});",
							"",
							"pm.test(\"La película devuelta tiene los campos correctos\", function () {",
							"    const responseData = pm.response.json();",
							"    const requestBody = JSON.parse(request.data);",
							"",
							"    pm.expect(responseData['genero']).to.exist.and.eql(requestBody['genero']);",
							"    pm.expect(responseData['titulo']).to.exist.and.eql(requestBody['titulo']);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"titulo\": \"Star Wars: La Amenaza Fantasma\",\n    \"genero\": \"Acción\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/peliculas/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "eliminar película",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "película random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "película random con género",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('La película devuelta es del género pedido', function () {",
							"    const responseData = pm.response.json();",
							"    const reqGenero = pm.request.url.toString().split('=').at(-1).toUpperCase();",
							"",
							"    pm.expect(responseData.genero).to.exist;",
							"",
							"    const encodedResGenero = encodeURI(responseData.genero).toUpperCase();",
							"    pm.expect(encodedResGenero).to.eql(reqGenero);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/random?genero=aCcióN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"random"
					],
					"query": [
						{
							"key": "genero",
							"value": "aCcióN"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "película random con género y feriado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"})",
							"",
							"pm.test('Devuelve un objeto \"holiday\"', function () {",
							"    const resData = pm.response.json();",
							"",
							"    pm.expect(resData.holiday).to.exist.and.be.an('object');",
							"});",
							"",
							"pm.test('La película devuelta es del género pedido', function () {",
							"    const responseData = pm.response.json();",
							"    const reqGenero = pm.request.url.toString().split('=').at(-1).toUpperCase();",
							"",
							"    pm.expect(responseData.pelicula['genero']).to.exist;",
							"",
							"    const encodedResGenero = encodeURI(responseData.pelicula['genero']).toUpperCase();",
							"    pm.expect(encodedResGenero).to.eql(reqGenero);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/feriado?genero=dRaMA",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"feriado"
					],
					"query": [
						{
							"key": "genero",
							"value": "dRaMA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "feriado sin especificar género",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 400', function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/peliculas/feriado",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"peliculas",
						"feriado"
					],
					"query": [
						{
							"key": "genero",
							"value": "dRaMA",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}